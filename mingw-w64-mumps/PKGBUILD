# Contributor: Oleg A. Khlybov <fougas@mail.ru>

_realname=mumps

pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=5.1.2
pkgrel=1
arch=('any')
pkgdesc="Sparse direct SLAE solver (mingw-w64)"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs" "${MINGW_PACKAGE_PREFIX}-gcc-libgfortran" "${MINGW_PACKAGE_PREFIX}-openblas" "${MINGW_PACKAGE_PREFIX}-metis" "${MINGW_PACKAGE_PREFIX}-parmetis" "${MINGW_PACKAGE_PREFIX}-scotch" "${MINGW_PACKAGE_PREFIX}-ptscotch" "${MINGW_PACKAGE_PREFIX}-scalapack")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-gcc-fortran" "${MINGW_PACKAGE_PREFIX}-msmpi" "${MINGW_PACKAGE_PREFIX}-openblas" "${MINGW_PACKAGE_PREFIX}-metis" "${MINGW_PACKAGE_PREFIX}-parmetis" "${MINGW_PACKAGE_PREFIX}-scotch" "${MINGW_PACKAGE_PREFIX}-ptscotch" "${MINGW_PACKAGE_PREFIX}-scalapack")
options=('strip' 'staticlibs')
license=('LGPL')
url="http://mumps.enseeiht.fr/"
source=("http://mumps.enseeiht.fr/MUMPS_${pkgver}.tar.gz")
sha256sums=('eb345cda145da9aea01b851d17e54e7eef08e16bfa148100ac1f7f046cd42ae9')

prepare() {
  cd "${srcdir}/${_realname}_${pkgver}"
  for p in ${srcdir}/../*.patch; do
	patch -p1 < $p
  done
}

_seq_pc="metis esmumps openblas"
_mpi_pc="scalapack parmetis ptesmumps openblas msmpi"

build() {
  cd "${srcdir}/${_realname}_${pkgver}"
  for mod in PAR SEQ; do
    cp Makefile.inc.${mod} Makefile.inc
    make -j1 clean all
	true
  done
  cd lib
  rm -rf libmumps-{aso,amo}.a
  cp ../libseq/libmpi_seq.a .
  strip -S *.a # thin archives require dependant archives to be stripped beforehand
  ar crsT libmumps-aso.a libcmumps_seq.a libzmumps_seq.a libsmumps_seq.a libdmumps_seq.a libmumps_common_seq.a libpord_seq.a libmpi_seq.a
  ar crsT libmumps-amo.a libcmumps_mpi.a libzmumps_mpi.a libsmumps_mpi.a libdmumps_mpi.a libmumps_common_mpi.a libpord_mpi.a
  gfortran -shared -Wl,--enable-auto-import -Wl,--export-all-symbols -o libmumps-aso.dll -Wl,--out-implib,libmumps-aso.dll.a -Wl,--whole-archive libmumps-aso.a -Wl,--no-whole-archive $(pkg-config ${_seq_pc} --libs)
  mpif90 -shared -Wl,--enable-auto-import -Wl,--export-all-symbols -o libmumps-amo.dll -Wl,--out-implib,libmumps-amo.dll.a -Wl,--whole-archive libmumps-amo.a -Wl,--no-whole-archive $(pkg-config ${_mpi_pc} --libs)
}

_aso="
prefix=${MINGW_PREFIX}
libdir=\${prefix}/lib
includedir=\${prefix}/include
Name: ${_realname}
URL: ${url}
Version: ${pkgver}
Description: Sequential version of the sparse direct SLAE solver (mingw-w64)
Requires.private: ${_seq_pc}
Cflags: -I\${includedir} -I\${includedir}/mpi_seq
Libs.private: -lmumps-aso -lgfortran -lquadmath
Libs: -L\${libdir} -lmumps-aso
"

_amo="
prefix=${MINGW_PREFIX}
libdir=\${prefix}/lib
includedir=\${prefix}/include
Name: ${_realname}
URL: ${url}
Version: ${pkgver}
Description: MPI-aware parallel version of the sparse direct SLAE solver (mingw-w64)
Cflags: -I\${includedir}
Requires.private: ${_mpi_pc}
Libs.private: -lmumps-amo -lgfortran -lquadmath
Libs: -L\${libdir} -lmumps-amo
"

package() {
  cd "$srcdir/${_realname}_${pkgver}"
  mkdir -p ${pkgdir}${MINGW_PREFIX}/{bin,lib,include}
  mkdir -p "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig"
  (
    cd libseq
    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/mpi_seq"
    install -m644 mpi*.h "${pkgdir}${MINGW_PREFIX}/include/mpi_seq"
  )
  (
    cd lib
    install -m644 *.a "${pkgdir}${MINGW_PREFIX}/lib"
    install -m644 *.dll "${pkgdir}${MINGW_PREFIX}/bin"
  )
  (
    cd include
    install -m644 *.h "${pkgdir}${MINGW_PREFIX}/include"
  )
  echo "${_aso}" > "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/mumps-aso.pc"
  echo "${_amo}" > "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/mumps-amo.pc"
}
